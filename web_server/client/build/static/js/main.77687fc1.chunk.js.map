{"version":3,"sources":["App/newspaper.svg","serviceWorker.js","Auth/Auth.js","NewsCard/NewsCard.js","NewsPanel/NewsPanel.js","App/App.js","Base/Base.js","Login/LoginForm.js","Login/LoginPage.js","SignUp/SignUpForm.js","SignUp/SignUpPage.js","routes.js","index.js"],"names":["module","exports","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","Auth","token","email","localStorage","setItem","getItem","removeItem","NewsCard","url","e","preventDefault","this","sendClickLog","open","getEmail","props","news","digest","request","Request","encodeURI","method","headers","getToken","fetch","className","onClick","redirectToUrl","src","urlToImage","alt","title","description","source","reason","time","React","Component","NewsPanel","pageNum","loadedAll","loadMoreNews","_","debounce","addEventListener","handleScroll","scrollY","pageYOffset","document","documentElement","scrollTop","innerHeight","body","offsetHeight","news_list","map","key","href","news_url","res","json","fetched_news_list","length","setState","concat","renderNews","App","logo","width","height","Base","children","id","isUserAuthenticated","to","LoginForm","onSubmit","onChange","errors","action","summary","type","name","htmlFor","password","value","LoginPage","context","user","event","JSON","stringify","response","status","authenticateUser","router","replace","message","field","target","processForm","changeUser","contextTypes","PropTypes","object","isRequired","SignUpForm","SignUpPage","confirm_password","routes","component","childRoutes","path","getComponent","callback","onEnter","nextState","deauthenticateUser","ReactDOM","render","history","browserHistory","getElementById","URL","process","origin","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"8FAAAA,EAAOC,QAAU,IAA0B,uC,qPCYrCC,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,YAI1BC,QAAQC,IACN,iHAKEb,GAAUA,EAAOc,UACnBd,EAAOc,SAAST,KAMlBO,QAAQC,IAAI,sCAGRb,GAAUA,EAAOe,WACnBf,EAAOe,UAAUV,WAO5BW,OAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,M,gCCpElDC,G,gIAzBWC,EAAOC,GAC7BC,aAAaC,QAAQ,QAASH,GAC9BE,aAAaC,QAAQ,QAASF,K,4CAM9B,OAAyC,OAAlCC,aAAaE,QAAQ,W,2CAI5BF,aAAaG,WAAW,SACxBH,aAAaG,WAAW,W,iCAIxB,OAAOH,aAAaE,QAAQ,W,iCAI5B,OAAOF,aAAaE,QAAQ,a,MCuCjBE,E,4KAzDCC,EAAKC,GACjBA,EAAEC,iBACFC,KAAKC,eACLpC,OAAOqC,KAAKL,EAAK,Y,qCAKjB,IAAMA,EAAM,UAAYhC,OAAOC,SAASC,SAA5B,qBACYsB,EAAKc,WAAa,WAAaH,KAAKI,MAAMC,KAAKC,OAEjEC,EAAU,IAAIC,QAGlBC,UAAUZ,GACV,CACEa,OAAQ,OACRC,QAAS,CACP,cAAiB,UAAYtB,EAAKuB,cAKxCC,MAAMN,K,+BAKG,IAAD,OACP,OACG,yBAAKO,UAAU,iBAAiBC,QAC9B,SAACjB,GAAD,OAAO,EAAKkB,cAAc,EAAKZ,MAAMC,KAAKR,IAAKC,KACjD,yBAAKgB,UAAU,OACb,yBAAKA,UAAU,eACb,yBAAKG,IAAKjB,KAAKI,MAAMC,KAAKa,WAAYC,IAAI,UAE5C,yBAAKL,UAAU,UACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,oBACb,4BAAKd,KAAKI,MAAMC,KAAKe,OACrB,yBAAKN,UAAU,oBACb,2BAAId,KAAKI,MAAMC,KAAKgB,aAClB,6BAC2B,MAA1BrB,KAAKI,MAAMC,KAAKiB,QAAkB,yBAAKR,UAAU,6BAA6Bd,KAAKI,MAAMC,KAAKiB,QACpE,MAA1BtB,KAAKI,MAAMC,KAAKkB,QAAkB,yBAAKT,UAAU,8BAA8Bd,KAAKI,MAAMC,KAAKkB,QACvE,MAAxBvB,KAAKI,MAAMC,KAAKmB,MAAgB,yBAAKV,UAAU,wBAAwBd,KAAKI,MAAMC,KAAKmB,iB,GA9CrFC,IAAMC,W,iBC6FdC,E,kDAxFb,aAAe,IAAD,8BACZ,gBACK9C,MAAQ,CAACwB,KAAK,KAAOuB,QAAQ,EAAGC,WAAU,GAFnC,E,gEAKO,IAAD,OAClB7B,KAAK8B,eACL9B,KAAK8B,aAAeC,IAAEC,SAAShC,KAAK8B,aAAc,KAClDjE,OAAOoE,iBAAiB,UAAU,kBAAM,EAAKC,oB,qCAK7C,IAAIC,EAAUtE,OAAOsE,SAAWtE,OAAOuE,aACvCC,SAASC,gBAAgBC,UACpB1E,OAAO2E,YAAcL,GAAaE,SAASI,KAAKC,aAAe,KAClE3D,QAAQC,IAAI,kBACXgB,KAAK8B,kB,mCAMR,IAAMa,EAAY3C,KAAKnB,MAAMwB,KAAKuC,KAAI,SAACvC,GACrC,OACE,uBAAGS,UAAU,kBAAkB+B,IAAKxC,EAAKC,OAAQwC,KAAK,KACpD,kBAAC,EAAD,CAAUzC,KAAMA,QAKtB,OACE,yBAAKS,UAAU,mBACb,yBAAKA,UAAU,cACZ6B,M,qCAMO,IAAD,OACb,GAAsB,GAAlB3C,KAAK6B,UAAT,CAIA9C,QAAQC,IAAI,qBACZ,IAAM+D,EAAW,UAAYlF,OAAOC,SAASC,SAA5B,qBAAkEsB,EAAKc,WAAa,YAAcH,KAAKnB,MAAM+C,QAExHrB,EAAU,IAAIC,QAClBC,UAAUsC,GAAW,CACrBrC,OAAQ,MACRC,QAAS,CACP,cAAiB,UAAYtB,EAAKuB,cAItCC,MAAMN,GACHhC,MAAK,SAAAyE,GAAG,OAAIA,EAAIC,UAChB1E,MAAK,SAAA2E,GACCA,GAAiD,GAA5BA,EAAkBC,SAC1CpE,QAAQC,IAAI,sCACZ,EAAKoE,SAAS,CAACvB,WAAW,KAE5B9C,QAAQC,IAAI,mCACZ,EAAKoE,SAAS,CACZ/C,KAAM,EAAKxB,MAAMwB,KAAO,EAAKxB,MAAMwB,KAAKgD,OAAOH,GAAqBA,EACpEtB,QAAS,EAAK/C,MAAM+C,QAAU,U,+BAMpC,OAAI5B,KAAKnB,MAAMwB,KAEX,6BACGL,KAAKsD,cAKR,+C,GAjFgB7B,IAAMC,W,iBCWf6B,E,uKAXX,OACE,6BACE,yBAAKzC,UAAU,OAAOG,IAAKuC,IAAMrC,IAAI,OAAOsC,MAAM,MAAMC,OAAO,QAC/D,yBAAK5C,UAAU,aACb,kBAAC,EAAD,Y,GANQW,IAAMC,WC6BTiC,G,kBA3BF,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACX,6BACE,yBAAK9C,UAAU,4BACb,yBAAKA,UAAU,eACb,uBAAGgC,KAAK,IAAIhC,UAAU,cAAtB,eACA,wBAAI+C,GAAG,cAAc/C,UAAU,SAC5BzB,EAAKyE,sBAEF,6BACE,4BAAKzE,EAAKc,YACV,4BAAI,kBAAC,IAAD,CAAM4D,GAAG,WAAT,aAIN,6BACE,4BAAI,kBAAC,IAAD,CAAMA,GAAG,UAAT,WACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,WAAT,gBAMhB,6BACCH,KCOUI,G,MAnCG,SAAC,GAAD,IAChBC,EADgB,EAChBA,SACAC,EAFgB,EAEhBA,SACAC,EAHgB,EAGhBA,OAHgB,OAKhB,yBAAKrD,UAAU,aACb,yBAAKA,UAAU,0BACb,0BAAMA,UAAU,UAAUsD,OAAO,IAAIH,SAAUA,GAC7C,wBAAInD,UAAU,gBAAd,SACCqD,EAAOE,SAAW,yBAAKvD,UAAU,OAAM,uBAAGA,UAAU,iBAAiBqD,EAAOE,UAC7E,yBAAKvD,UAAU,OACb,yBAAKA,UAAU,uBACb,2BAAOA,UAAU,WAAW+C,GAAG,QAAQS,KAAK,QAAQC,KAAK,QAAQL,SAAUA,IAC3E,2BAAOM,QAAQ,SAAf,WAGHL,EAAO5E,OAAS,yBAAKuB,UAAU,OAAM,uBAAGA,UAAU,iBAAiBqD,EAAO5E,QAC3E,yBAAKuB,UAAU,OACb,yBAAKA,UAAU,uBACb,2BAAOA,UAAU,WAAW+C,GAAG,WAAWS,KAAK,WAAWC,KAAK,WAAWL,SAAUA,IACpF,2BAAOM,QAAQ,YAAf,cAGHL,EAAOM,UAAY,yBAAK3D,UAAU,OAAM,uBAAGA,UAAU,iBAAiBqD,EAAOM,WAC9E,yBAAK3D,UAAU,mBACb,2BAAOwD,KAAK,SAASxD,UAAU,gDAAgD4D,MAAM,YAEvF,yBAAK5D,UAAU,OACf,uBAAGA,UAAU,eAAb,qBAA6C,kBAAC,IAAD,CAAMiD,GAAG,WAAT,kB,gBC1B/CY,E,kDACJ,WAAYvE,EAAOwE,GAAU,IAAD,8BAC1B,cAAMxE,EAAOwE,IAER/F,MAAQ,CACXsF,OAAQ,GACRU,KAAM,CACJtF,MAAO,GACPkF,SAAU,KAPY,E,wDAahBK,GAAQ,IAAD,OACjBA,EAAM/E,iBACN,IAAMR,EAAQS,KAAKnB,MAAMgG,KAAKtF,MACxBkF,EAAWzE,KAAKnB,MAAMgG,KAAKJ,SAEjC1F,QAAQC,IAAI,SAAUO,GACtBR,QAAQC,IAAI,WAAYyF,GAGxB,IAAM5E,EAAM,UAAWhC,OAAOC,SAASC,SAA3B,mBACNwC,EAAU,IAAIC,QAClBX,EACA,CACEa,OAAO,OAAQC,QAAS,CACtB,OAAU,mBACV,eAAgB,oBAElB8B,KAAMsC,KAAKC,UAAU,CACnBzF,MAAOS,KAAKnB,MAAMgG,KAAKtF,MACvBkF,SAAUzE,KAAKnB,MAAMgG,KAAKJ,aAIhC5D,MAAMN,GAAShC,MAAK,SAAA0G,GACM,MAApBA,EAASC,QAEX,EAAK9B,SAAS,CAAEe,OAAQ,KACxBc,EAAShC,OAAO1E,MAAK,SAAA0E,GACnBlE,QAAQC,IAAIiE,GAEZlE,QAAQC,IAAI,kDACZK,EAAK8F,iBAAiBlC,EAAK3D,MAAOC,GAClCR,QAAQC,IAAI,sGAEZ,EAAK4F,QAAQQ,OAAOC,QAAQ,UAG9BtG,QAAQC,IAAI,gBACZiG,EAAShC,OAAO1E,MAAK,SAAA0E,GACnB,IAAMkB,EAASlB,EAAKkB,OAASlB,EAAKkB,OAAS,GAC3CA,EAAOE,QAAUpB,EAAKqC,QACtB,EAAKlC,SAAS,CAACe,oB,iCAMZW,GACP,IAAMS,EAAQT,EAAMU,OAAOjB,KACrBM,EAAO7E,KAAKnB,MAAMgG,KACxBA,EAAKU,GAAST,EAAMU,OAAOd,MAE3B1E,KAAKoD,SAAS,CAACyB,W,+BAGT,IAAD,OACP,OACE,kBAAC,EAAD,CACAZ,SAAU,SAACnE,GAAD,OAAO,EAAK2F,YAAY3F,IAClCoE,SAAU,SAACpE,GAAD,OAAO,EAAK4F,WAAW5F,IACjCqE,OAAQnE,KAAKnB,MAAMsF,a,GA1ED1C,IAAMC,WAgF9BiD,EAAUgB,aAAe,CACvBP,OAAQQ,IAAUC,OAAOC,YAGZnB,QCpCAoB,G,MA9CI,SAAC,GAAD,IACjB9B,EADiB,EACjBA,SAAUC,EADO,EACPA,SAAUC,EADH,EACGA,OADH,EACWU,KADX,OAGjB,yBAAK/D,UAAU,aACb,yBAAKA,UAAU,2BACb,0BAAMA,UAAU,UAAUsD,OAAO,IAAIH,SAAUA,GAC7C,wBAAInD,UAAU,gBAAd,WACCqD,EAAOE,SAAW,yBAAKvD,UAAU,OAAM,uBAAGA,UAAU,iBAAiBqD,EAAOE,UAC7E,yBAAKvD,UAAU,OACb,yBAAKA,UAAU,uBACb,2BAAOA,UAAU,WAAW+C,GAAG,QAAQS,KAAK,QAAQC,KAAK,QAAQL,SAAUA,IAC3E,2BAAOM,QAAQ,SAAf,WAGHL,EAAO5E,OAAS,yBAAKuB,UAAU,OAAM,uBAAGA,UAAU,iBAAiBqD,EAAO5E,QAC3E,yBAAKuB,UAAU,OACb,yBAAKA,UAAU,uBACb,2BAAOA,UAAU,WAAW+C,GAAG,WAAWS,KAAK,WAAWC,KAAK,WAAWL,SAAUA,IACpF,2BAAOM,QAAQ,YAAf,cAGHL,EAAOM,UAAY,yBAAK3D,UAAU,OAAM,uBAAGA,UAAU,iBAAiBqD,EAAOM,WAC9E,yBAAK3D,UAAU,OACb,yBAAKA,UAAU,uBACb,2BAAO+C,GAAG,mBAAmBS,KAAK,WAAWC,KAAK,mBAAmBzD,UAAU,WAAWoD,SAAUA,IACpG,2BAAOM,QAAQ,oBAAf,sBAGJ,yBAAK1D,UAAU,mBACb,2BAAOwD,KAAK,SAASxD,UAAU,gDAAgD4D,MAAM,aAEvF,yBAAK5D,UAAU,OACb,uBAAGA,UAAU,eAAb,yBAAiD,kBAAC,IAAD,CAAMiD,GAAG,UAAT,gBCpCrDiC,E,kDACJ,WAAY5F,EAAOwE,GAAU,IAAD,8BAC1B,cAAMxE,EAAOwE,IAER/F,MAAQ,CACXsF,OAAQ,GACRU,KAAM,CACJtF,MAAO,GACPkF,SAAU,GACVwB,iBAAkB,KARI,E,wDAahBnB,GAAQ,IAAD,OAIjBA,EAAM/E,iBACN,IAAMR,EAAQS,KAAKnB,MAAMgG,KAAKtF,MACxBkF,EAAWzE,KAAKnB,MAAMgG,KAAKJ,SAC3BwB,EAAmBjG,KAAKnB,MAAMgG,KAAKoB,iBAEzClH,QAAQC,IAAI,UAAWO,GACvBR,QAAQC,IAAI,aAAcyF,GAC1B1F,QAAQC,IAAI,qBAAsBiH,GAGlC,IAAMpG,EAAM,UAAYhC,OAAOC,SAASC,SAA5B,oBACNwC,EAAU,IAAIC,QAClBX,EACA,CACEa,OAAO,OAAQC,QAAS,CACtB,OAAU,mBACV,eAAgB,oBAElB8B,KAAMsC,KAAKC,UAAU,CACnBzF,MAAOS,KAAKnB,MAAMgG,KAAKtF,MACvBkF,SAAUzE,KAAKnB,MAAMgG,KAAKJ,aAKhC5D,MAAMN,GAAShC,MAAK,SAAA0G,GAClBlG,QAAQC,IAAI,2CACY,MAApBiG,EAASC,QACX,EAAK9B,SAAS,CAACe,OAAQ,KAEvB,EAAKS,QAAQQ,OAAOC,QAAQ,WAE5BJ,EAAShC,OAAO1E,MAAK,SAAA0E,GACnBlE,QAAQC,IAAIiE,GACZ,IAAMkB,EAASlB,EAAKkB,OAASlB,EAAKkB,OAAS,GAC3CA,EAAOE,QAAUpB,EAAKqC,QACtBvG,QAAQC,IAAI,EAAKH,MAAMsF,QACvB,EAAKf,SAAS,CAACe,mB,iCAQZW,GACT,IAAMS,EAAQT,EAAMU,OAAOjB,KACrBM,EAAO7E,KAAKnB,MAAMgG,KAGxB,GAFAA,EAAKU,GAAST,EAAMU,OAAOd,MAC3B1E,KAAKoD,SAAS,CAAEyB,SACZ7E,KAAKnB,MAAMgG,KAAKJ,WAAazE,KAAKnB,MAAMgG,KAAKoB,iBAAkB,CACjE,IAAM9B,EAASnE,KAAKnB,MAAMsF,OAC1BA,EAAOM,SAAW,6CAElBzE,KAAKoD,SAAS,CAACe,eACV,CACL,IAAMA,EAASnE,KAAKnB,MAAMsF,OAE1BA,EAAOM,SAAW,GAClBzE,KAAKoD,SAAS,CAACe,c,+BAIT,IAAD,OACP,OACE,kBAAC,EAAD,CACAF,SAAU,SAACa,GAAD,OAAW,EAAKW,YAAYX,IACtCZ,SAAU,SAACY,GAAD,OAAW,EAAKY,WAAWZ,IACrCX,OAAQnE,KAAKnB,MAAMsF,OACnBU,KAAM7E,KAAKnB,MAAMgG,W,GAvFEpD,IAAMC,WA8F/BsE,EAAWL,aAAe,CACxBP,OAAQQ,IAAUC,OAAOC,YAGZE,IC1DAE,EAtCA,CACbC,UAAWxC,EACXyC,YAAa,CACX,CACEC,KAAM,IACNC,aAAc,SAACxI,EAAUyI,GACnBlH,EAAKyE,sBAEPyC,EAAS,KAAMhD,GAGfgD,EAAS,KAAM5B,KAKrB,CACE0B,KAAM,SACNF,UAAWxB,GAGb,CACE0B,KAAM,UACNF,UDyESH,GCtEX,CACEK,KAAM,UACNG,QAAS,SAACC,EAAWpB,GAEnBhG,EAAKqH,qBAELrB,EAAQ,SCtBhBsB,IAASC,OACP,kBAAC,IAAD,CAAQC,QAASC,IAAgBZ,OAAQA,IAEzC7D,SAAS0E,eAAe,SXGnB,SAAkB5I,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAI4I,IAAIC,GAAwBpJ,OAAOC,SAASgF,MACpDoE,SAAWrJ,OAAOC,SAASoJ,OAIvC,OAGFrJ,OAAOoE,iBAAiB,QAAQ,WAC9B,IAAM/D,EAAK,UAAM+I,GAAN,sBAEPtJ,IAgEV,SAAiCO,EAAOC,GAEtC0C,MAAM3C,EAAO,CACXyC,QAAS,CAAE,iBAAkB,YAE5BpC,MAAK,SAAA0G,GAEJ,IAAMkC,EAAclC,EAAStE,QAAQyG,IAAI,gBAEnB,MAApBnC,EAASC,QACO,MAAfiC,IAA8D,IAAvCA,EAAYE,QAAQ,cAG5CjJ,UAAUC,cAAciJ,MAAM/I,MAAK,SAAAC,GACjCA,EAAa+I,aAAahJ,MAAK,WAC7BV,OAAOC,SAAS0J,eAKpBvJ,EAAgBC,EAAOC,MAG1BgB,OAAM,WACLJ,QAAQC,IACN,oEAvFAyI,CAAwBvJ,EAAOC,GAI/BC,UAAUC,cAAciJ,MAAM/I,MAAK,WACjCQ,QAAQC,IACN,iHAMJf,EAAgBC,EAAOC,OWvB/BE,K","file":"static/js/main.77687fc1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/newspaper.a05250c8.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","class Auth {\n  // called after login\n  // store the token and email into local storage static\n  static authenticateUser(token, email) {\n    localStorage.setItem('token', token);\n    localStorage.setItem('email', email);\n  }\n\n  static isUserAuthenticated() {\n    // on the client side, it cannot check if the token is sent by server\n    // when client send loadMoreNews request, server will check the token\n    return localStorage.getItem('token') !== null;\n  }\n\n  static deauthenticateUser() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('email');\n  }\n\n  static getToken() {\n    return localStorage.getItem('token');\n  }\n\n  static getEmail() {\n    return localStorage.getItem('email');\n  }\n}\n\nexport default Auth;\n","import './NewsCard.css'\n\nimport Auth from '../Auth/Auth';\nimport React from 'react';\n\nclass NewsCard extends React.Component {\n  redirectToUrl(url, e) {\n    e.preventDefault();\n    this.sendClickLog();\n    window.open(url, '_blank');\n  }\n\n  sendClickLog() {\n    // news.digest is unique\n    const url = \"http://\" + window.location.hostname + \":3000\"\n        + \"/news/userId=\" + Auth.getEmail() + \"&newsId=\" + this.props.news.digest;\n\n    const request = new Request(\n      // must have \"Authorization\" header\n      // since only registed user can send log to back end\n      encodeURI(url),\n      {\n        method: \"POST\",\n        headers: {\n          \"Authorization\": \"bearer \" + Auth.getToken()\n        },\n      }\n    );\n    // do not have response for this request\n    fetch(request);\n  }\n\n  // news is passed as property from NewsPanel\n  // NewsCard only does the rendering.\n   render() {\n     return(\n        <div className=\"news-container\" onClick={\n          (e) => this.redirectToUrl(this.props.news.url, e)}>\n        <div className='row'>\n          <div className='col s4 fill'>\n            <img src={this.props.news.urlToImage} alt='news' />\n          </div>\n          <div className='col s8'>\n            <div className='news-intro-col'>\n              <div className='news-intro-panel'>\n                <h4>{this.props.news.title}</h4>\n                <div className='news-description'>\n                  <p>{this.props.news.description}</p>\n                    <div>\n                    {this.props.news.source != null && <div className='chip light-blue news-chip'>{this.props.news.source}</div>}\n                    {this.props.news.reason != null && <div className='chip light-green news-chip'>{this.props.news.reason}</div>}\n                    {this.props.news.time != null && <div className='chip amber news-chip'>{this.props.news.time}</div>}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n   }\n}\n\nexport default NewsCard;\n","import './NewsPanel.css'\n\nimport NewsCard from '../NewsCard/NewsCard';\nimport Auth from '../Auth/Auth';\nimport _ from 'lodash';\nimport React from 'react'\n\n// NewsPanel should maintain a state that is a dynamic list of NewsCard.\n// NewsPanel cannot be a function, it should be a class to maintain a state\nclass NewsPanel extends React.Component {\n  constructor() {\n    super();\n    this.state = {news:null,  pageNum:1, loadedAll:false};\n  }\n\n  componentDidMount() {\n    this.loadMoreNews();\n    this.loadMoreNews = _.debounce(this.loadMoreNews, 1000)\n    window.addEventListener('scroll', () => this.handleScroll());\n  }\n\n  handleScroll() {\n    // the height that cannot show on the screen\n    let scrollY = window.scrollY || window.pageYOffset ||\n    document.documentElement.scrollTop\n    if ((window.innerHeight + scrollY) >= (document.body.offsetHeight - 50 )) {\n      console.log(\"Handle Scoller\");\n       this.loadMoreNews();\n     }\n   }\n\n  renderNews() {\n    // news_list is a list of HTML\n    const news_list = this.state.news.map((news) => {\n      return(\n        <a className='list-group-item' key={news.digest} href=\"#\">\n          <NewsCard news={news} />\n        </a>\n      );\n    });\n\n    return (\n      <div className='container-fluid'>\n        <div className='list-group'>\n          {news_list}\n        </div>\n      </div>\n    );\n  }\n\n  loadMoreNews() {\n    if (this.loadedAll == true) {\n      return;\n    }\n\n    console.log(\"Load more news!!!\");\n    const news_url = 'http://' + window.location.hostname + ':3000' +'/news/userId=' + Auth.getEmail() + '&pageNum=' + this.state.pageNum;\n    // encode url to escape special character of user email\n    const request = new Request(\n      encodeURI(news_url), {\n      method: 'GET',\n      headers: {\n        'Authorization': 'bearer ' + Auth.getToken(),\n      }\n    });\n\n    fetch(request)\n      .then(res => res.json())\n      .then(fetched_news_list => {\n        if (!fetched_news_list || fetched_news_list.length == 0) {\n          console.log(\"====newsPanel.js loadedAll====0000\");\n          this.setState({loadedAll: true});\n        }\n        console.log(\"====newsPanel.js print news====\");\n        this.setState({\n          news: this.state.news ? this.state.news.concat(fetched_news_list) : fetched_news_list,\n          pageNum: this.state.pageNum + 1,\n        });\n      });\n  }\n\n  render() {\n    if (this.state.news) {\n      return (\n        <div>\n          {this.renderNews()}\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          Loading...\n        </div>\n      );\n    }\n  }\n}\n\nexport default NewsPanel;\n","import './App.css';\n\nimport NewsPanel from '../NewsPanel/NewsPanel';\n//import NewsPanel from './NewsPanel';\nimport React from 'react';\nimport logo from './newspaper.svg';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <img className='logo' src={logo} alt='logo' width=\"140\" height=\"180\" />\n        <div className='container'>\n          <NewsPanel />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// import 'materialize-css/dist/css/materialize.mim.css';\nimport 'materialize-css'; // It installs the JS asset only\nimport 'materialize-css/dist/css/materialize.min.css';\n\nimport Auth from '../Auth/Auth';\nimport { Link } from 'react-router';\nimport React from 'react';\n\nimport './Base.css'\nconst Base = ({ children }) => (\n  <div>\n    <nav className=\"nav-bar indigo lighten-1\">\n      <div className=\"nav-wrapper\">\n        <a href=\"/\" className=\"brand-logo\">   Tap News</a>\n        <ul id=\"nav-modbile\" className=\"right\">\n          {Auth.isUserAuthenticated() ?\n            (\n              <div>\n                <li>{Auth.getEmail()}</li>\n                <li><Link to=\"/logout\">Log out</Link></li>\n              </div>)\n              :\n              (\n              <div>\n                <li><Link to=\"/login\">Log in</Link></li>\n                <li><Link to=\"/signup\">Sign up</Link></li>\n              </div>)\n            }\n        </ul>\n      </div>\n    </nav>\n    <br />\n    {children}\n  </div>\n);\n\nexport default Base;\n","import './LoginForm.css';\nimport { Link } from 'react-router';\nimport React from 'react';\n\nconst LoginForm = ({\n  onSubmit,\n  onChange,\n  errors,\n}) => (\n  <div className=\"container\">\n    <div className=\"card-panel login-panel\">\n      <form className=\"col s12\" action=\"/\" onSubmit={onSubmit}>\n        <h4 className=\"center-align\">Login</h4>\n        {errors.summary && <div className=\"row\"><p className=\"error-message\">{errors.summary}</p></div>}\n        <div className=\"row\">\n          <div className=\"input-field col s12\">\n            <input className=\"validate\" id=\"email\" type=\"email\" name=\"email\" onChange={onChange}/>\n            <label htmlFor='email'>Email</label>\n          </div>\n        </div>\n        {errors.email && <div className=\"row\"><p className=\"error-message\">{errors.email}</p></div>}\n        <div className=\"row\">\n          <div className=\"input-field col s12\">\n            <input className=\"validate\" id=\"password\" type=\"password\" name=\"password\" onChange={onChange}/>\n            <label htmlFor='password'>Password</label>\n          </div>\n        </div>\n        {errors.password && <div className=\"row\"><p className=\"error-message\">{errors.password}</p></div>}\n        <div className=\"row right-align\">\n          <input type=\"submit\" className=\"waves-effect waves-light btn indigo lighten-1\" value='Log in'/>\n        </div>\n        <div className=\"row\">\n        <p className=\"right-align\"> New to Tap News? <Link to='/signup'>Sign Up</Link></p>\n        </div>\n      </form>\n    </div>\n</div>\n);\n\nexport default LoginForm;\n","import LoginForm from './LoginForm';\nimport React from 'react';\n// LoginPage.js\nimport Auth from '../Auth/Auth';\nimport PropTypes from 'prop-types';\n//var PropTypes = require('prop-types'); // ES5 with npm\nclass LoginPage extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      errors: {},\n      user: {\n        email: '',\n        password: ''\n      }\n    }\n  }\n\n  // set the initial Component state.\n  processForm(event) {\n    event.preventDefault();\n    const email = this.state.user.email;\n    const password = this.state.user.password;\n\n    console.log('email:', email);\n    console.log('password', password);\n\n    // Post login data\n    const url = 'http://'+ window.location.hostname + ':3000' + '/auth/login';\n    const request = new Request (\n      url,\n      {\n        method:'POST', headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          email: this.state.user.email,\n          password: this.state.user.password\n        })\n    });\n\n    fetch(request).then(response => {\n      if (response.status === 200) {\n        // may have error, after login clear the error\n        this.setState({ errors: {} });\n        response.json().then(json => {\n          console.log(json);\n          // \"token\" should match with server\n          console.log(\"=======token should match with server=========\");\n          Auth.authenticateUser(json.token, email);\n          console.log(\"=============redireact to root, since client already login, App component will be shown=========.=\");\n          // redireact to root, since client already login, App component will be shown.\n          this.context.router.replace('/');\n        });\n      } else {\n        console.log(\"Login failed\");\n        response.json().then(json => {\n          const errors = json.errors ? json.errors : {};\n          errors.summary = json.message;\n          this.setState({errors});\n        });\n      }\n    });\n  }\n\n  changeUser(event) {\n      const field = event.target.name; // email || Password\n      const user = this.state.user;\n      user[field] = event.target.value;\n\n      this.setState({user});\n  }\n\n  render() {\n    return (\n      <LoginForm\n      onSubmit={(e) => this.processForm(e)}\n      onChange={(e) => this.changeUser(e)}\n      errors={this.state.errors}\n      />\n    );\n  }\n}\n\nLoginPage.contextTypes = {\n  router: PropTypes.object.isRequired\n};\n\nexport default LoginPage;\n","// SignUpForm.js\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router';\nimport React from 'react';\nimport './SignUpForm.css';\n\n\n// destructuring\nconst SignUpForm = ({\n  onSubmit, onChange, errors, user\n}) => (\n  <div className=\"container\">\n    <div className=\"card-panel signup-panel\">\n      <form className=\"col s12\" action=\"/\" onSubmit={onSubmit}>\n        <h4 className=\"center-align\">Sign Up</h4>\n        {errors.summary && <div className=\"row\"><p className=\"error-message\">{errors.summary}</p></div>}\n        <div className=\"row\">\n          <div className=\"input-field col s12\">\n            <input className=\"validate\" id=\"email\" type=\"email\" name=\"email\" onChange={onChange}/>\n            <label htmlFor='email'>Email</label>\n          </div>\n        </div>\n        {errors.email && <div className=\"row\"><p className=\"error-message\">{errors.email}</p></div>}\n        <div className=\"row\">\n          <div className=\"input-field col s12\">\n            <input className=\"validate\" id=\"password\" type=\"password\" name=\"password\" onChange={onChange}/>\n            <label htmlFor='password'>Password</label>\n          </div>\n        </div>\n        {errors.password && <div className=\"row\"><p className=\"error-message\">{errors.password}</p></div>}\n        <div className=\"row\">\n          <div className=\"input-field col s12\">\n            <input id=\"confirm_password\" type=\"password\" name=\"confirm_password\" className=\"validate\" onChange={onChange}/>\n            <label htmlFor=\"confirm_password\">Confirm Password</label>\n          </div>\n        </div>\n        <div className=\"row right-align\">\n          <input type=\"submit\" className=\"waves-effect waves-light btn indigo lighten-1\" value='Sign Up'/>\n        </div>\n        <div className=\"row\">\n          <p className=\"right-align\">Already have account? <Link to='/login'>Login</Link></p>\n        </div>\n      </form>\n    </div>\n  </div>\n  );\n\n  SignUpForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n    onChange: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired,\n    user: PropTypes.object.isRequired\n  };\n\nexport default SignUpForm;\n","import SignUpForm from './SignUpForm';\nimport React from 'react';\n\nimport PropTypes from 'prop-types';\nclass SignUpPage extends React.Component {\n  constructor(props, context) {\n    super(props, context); // initialize state\n    // initialize state\n    this.state = {\n      errors: {},\n      user: {\n        email: '',\n        password: '',\n        confirm_password: ''\n      }\n    };\n  }\n\n  processForm(event) {\n    // prevent browser default behavior\n    // when click a button, browser may automatically send a post request\n    // we don't want the browser's default behavior\n    event.preventDefault();\n    const email = this.state.user.email;\n    const password = this.state.user.password;\n    const confirm_password = this.state.user.confirm_password;\n\n    console.log(\"email: \", email);\n    console.log(\"password: \", password);\n    console.log(\"confirm_password: \", confirm_password);\n\n    // Post registeration data\n    const url = 'http://' + window.location.hostname + ':3000' + '/auth/signup';\n    const request = new Request(\n      url,\n      {\n        method:'POST', headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          email: this.state.user.email,\n          password: this.state.user.password\n        })\n      }\n    );\n\n    fetch(request).then(response => {\n      console.log(\"====SignUpPage.js fetch(request)=======\");\n      if (response.status === 200) {\n        this.setState({errors: {}});\n        // change the current URL to /login\n        this.context.router.replace('/login');\n      } else {\n        response.json().then(json => {\n          console.log(json);\n          const errors = json.errors ? json.errors : {};\n          errors.summary = json.message;\n          console.log(this.state.errors);\n          this.setState({errors});\n        });\n      }\n    });\n  }\n\n  // TODO post login data\n  // update the user info (email and password) when user type the email and password\n  changeUser(event) {\n    const field = event.target.name;\n    const user = this.state.user;\n    user[field] = event.target.value;\n    this.setState({ user }); // setState will change state and reload UI\n    if (this.state.user.password !== this.state.user.confirm_password) {\n      const errors = this.state.errors;\n      errors.password = \"Password and Confirm Password don't match.\";\n      // refresh UI\n      this.setState({errors})\n    } else {\n      const errors = this.state.errors;\n      // clear the error message\n      errors.password = '';\n      this.setState({errors});\n    }\n  }\n  \n  render() {\n    return (\n      <SignUpForm\n      onSubmit={(event) => this.processForm(event)}\n      onChange={(event) => this.changeUser(event)}\n      errors={this.state.errors}\n      user={this.state.user}\n      />\n    );\n  }\n}\n\n// to make react-router work\nSignUpPage.contextTypes = {\n  router: PropTypes.object.isRequired\n};\n\nexport default SignUpPage;\n","import App from './App/App';\nimport Auth from './Auth/Auth';\nimport Base from './Base/Base';\nimport LoginPage from './Login/LoginPage';\nimport SignUpPage from './SignUp/SignUpPage';\n\nconst routes = {\n  component: Base,\n  childRoutes: [\n    {\n      path: '/',\n      getComponent: (location, callback) => {\n        if (Auth.isUserAuthenticated()) {\n          // if login, show App component\n          callback(null, App);\n        } else {\n          // otherwise, show LoginPage\n          callback(null, LoginPage);\n        }\n      }\n    },\n\n    {\n      path: '/login',\n      component: LoginPage\n    },\n\n    {\n      path: '/signup',\n      component: SignUpPage\n    },\n\n    {\n      path: '/logout',\n      onEnter: (nextState, replace) => {\n        // logout remove token\n        Auth.deauthenticateUser();\n        // redireact to root, then redireact to LoginPage\n        replace('/');\n      }\n    }\n  ]\n};\n\nexport default routes;\n","import { Router, browserHistory } from 'react-router';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n// import SignUpPage from './SignUp/SignUpPage';\nimport routes from './routes';\n\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\nReactDOM.render(\n  <Router history={browserHistory} routes={routes} />,\n  //<SignUpPage />,\n  document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\nserviceWorker.register();\n"],"sourceRoot":""}